// 
// Decompiled by Procyon v0.5.36
// 

package me.gopro336.goprohack.modules.exploit;

import net.minecraft.util.EnumHand;
import java.util.function.Predicate;
import net.minecraft.network.play.client.CPacketAnimation;
import me.gopro336.goprohack.events.player.EventPlayerSwingArm;
import me.zero.alpine.fork.listener.EventHandler;
import me.gopro336.goprohack.events.network.EventNetworkPacketEvent;
import me.zero.alpine.fork.listener.Listener;
import me.gopro336.goprohack.modules.Value;
import me.gopro336.goprohack.modules.Module;

public class SwingModule extends Module
{
    public final Value<Modes> Mode;
    @EventHandler
    private Listener<EventNetworkPacketEvent> PacketEvent;
    @EventHandler
    private Listener<EventPlayerSwingArm> SwingArm;
    
    public SwingModule() {
        super("Swing", new String[] { "AntiSwing" }, "Prevents swinging server-side", "NONE", 5131167, ModuleType.EXPLOIT);
        this.Mode = new Value<Modes>("Mode", new String[] { "Mode", "M" }, "The Swining mode to use", Modes.Packet);
        this.PacketEvent = new Listener<EventNetworkPacketEvent>(p_Event -> {
            if (p_Event.getPacket() instanceof CPacketAnimation && this.Mode.getValue() == Modes.Packet) {
                p_Event.cancel();
            }
            return;
        }, (Predicate<EventNetworkPacketEvent>[])new Predicate[0]);
        this.SwingArm = new Listener<EventPlayerSwingArm>(p_Event -> {
            if (this.Mode.getValue() == Modes.Full) {
                p_Event.cancel();
            }
            else if (this.Mode.getValue() == Modes.Offhand) {
                p_Event.Hand = EnumHand.OFF_HAND;
            }
        }, (Predicate<EventPlayerSwingArm>[])new Predicate[0]);
    }
    
    @Override
    public String getMetaData() {
        return this.Mode.getValue().toString();
    }
    
    private enum Modes
    {
        Full, 
        Packet, 
        Offhand;
    }
}
